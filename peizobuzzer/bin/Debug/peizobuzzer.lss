
bin\Debug\peizobuzzer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800200  00000402  000004b6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000402  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000007e0  00800208  00800208  000004be  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  000004be  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .debug_aranges 00000040  00000000  00000000  000004c1  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000000e3  00000000  00000000  00000501  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000002e2  00000000  00000000  000005e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000001cc  00000000  00000000  000008c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000274  00000000  00000000  00000a92  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000060  00000000  00000000  00000d08  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000013d  00000000  00000000  00000d68  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
   8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
   c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  10:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  14:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  18:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  1c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  20:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  24:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  2c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  30:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  34:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  38:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  3c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  44:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  48:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  4c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  50:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  54:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  58:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  5c:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__vector_23>
  60:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  64:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  68:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  6c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  70:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  74:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  78:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  7c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  80:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  84:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  88:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  8c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  90:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  94:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  98:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  9c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  a0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  a4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  a8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  ac:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  b0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  b4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  b8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  bc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  c0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  c4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  c8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  cc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  d0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  d4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  d8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  dc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  e0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e2 e0       	ldi	r30, 0x02	; 2
  fc:	f4 e0       	ldi	r31, 0x04	; 4
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a8 30       	cpi	r26, 0x08	; 8
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	19 e0       	ldi	r17, 0x09	; 9
 110:	a8 e0       	ldi	r26, 0x08	; 8
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a8 3e       	cpi	r26, 0xE8	; 232
 11a:	b1 07       	cpc	r27, r17
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	0e 94 95 00 	call	0x12a	; 0x12a <main>
 122:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <_exit>

00000126 <__bad_interrupt>:
 126:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012a <main>:
#include <avr/io.h>
#include "peizo.h"


int main(void)
{
 12a:	df 93       	push	r29
 12c:	cf 93       	push	r28
 12e:	cd b7       	in	r28, 0x3d	; 61
 130:	de b7       	in	r29, 0x3e	; 62
 132:	2d 97       	sbiw	r28, 0x0d	; 13
 134:	0f b6       	in	r0, 0x3f	; 63
 136:	f8 94       	cli
 138:	de bf       	out	0x3e, r29	; 62
 13a:	0f be       	out	0x3f, r0	; 63
 13c:	cd bf       	out	0x3d, r28	; 61
    peizo_init();
 13e:	0e 94 c8 00 	call	0x190	; 0x190 <peizo_init>
    int array[] = {500,100,500,10};
 142:	ce 01       	movw	r24, r28
 144:	01 96       	adiw	r24, 0x01	; 1
 146:	9a 87       	std	Y+10, r25	; 0x0a
 148:	89 87       	std	Y+9, r24	; 0x09
 14a:	e0 e0       	ldi	r30, 0x00	; 0
 14c:	f2 e0       	ldi	r31, 0x02	; 2
 14e:	fc 87       	std	Y+12, r31	; 0x0c
 150:	eb 87       	std	Y+11, r30	; 0x0b
 152:	f8 e0       	ldi	r31, 0x08	; 8
 154:	fd 87       	std	Y+13, r31	; 0x0d
 156:	eb 85       	ldd	r30, Y+11	; 0x0b
 158:	fc 85       	ldd	r31, Y+12	; 0x0c
 15a:	00 80       	ld	r0, Z
 15c:	8b 85       	ldd	r24, Y+11	; 0x0b
 15e:	9c 85       	ldd	r25, Y+12	; 0x0c
 160:	01 96       	adiw	r24, 0x01	; 1
 162:	9c 87       	std	Y+12, r25	; 0x0c
 164:	8b 87       	std	Y+11, r24	; 0x0b
 166:	e9 85       	ldd	r30, Y+9	; 0x09
 168:	fa 85       	ldd	r31, Y+10	; 0x0a
 16a:	00 82       	st	Z, r0
 16c:	89 85       	ldd	r24, Y+9	; 0x09
 16e:	9a 85       	ldd	r25, Y+10	; 0x0a
 170:	01 96       	adiw	r24, 0x01	; 1
 172:	9a 87       	std	Y+10, r25	; 0x0a
 174:	89 87       	std	Y+9, r24	; 0x09
 176:	9d 85       	ldd	r25, Y+13	; 0x0d
 178:	91 50       	subi	r25, 0x01	; 1
 17a:	9d 87       	std	Y+13, r25	; 0x0d
 17c:	ed 85       	ldd	r30, Y+13	; 0x0d
 17e:	ee 23       	and	r30, r30
 180:	51 f7       	brne	.-44     	; 0x156 <main+0x2c>
    // Insert code
    playtune(array,sizeof array/sizeof array[0]);
 182:	ce 01       	movw	r24, r28
 184:	01 96       	adiw	r24, 0x01	; 1
 186:	64 e0       	ldi	r22, 0x04	; 4
 188:	70 e0       	ldi	r23, 0x00	; 0
 18a:	0e 94 f6 00 	call	0x1ec	; 0x1ec <playtune>
 18e:	ff cf       	rjmp	.-2      	; 0x18e <main+0x64>

00000190 <peizo_init>:
volatile unsigned counterA = 0;
volatile unsigned counterB = 0;



void peizo_init(){
 190:	df 93       	push	r29
 192:	cf 93       	push	r28
 194:	cd b7       	in	r28, 0x3d	; 61
 196:	de b7       	in	r29, 0x3e	; 62
    TIMERA = 0;
 198:	e4 e4       	ldi	r30, 0x44	; 68
 19a:	f0 e0       	ldi	r31, 0x00	; 0
 19c:	10 82       	st	Z, r1
    TIMERB |= (0 << CS02) | (1 << CS01) | (1 << CS00);
 19e:	a5 e4       	ldi	r26, 0x45	; 69
 1a0:	b0 e0       	ldi	r27, 0x00	; 0
 1a2:	e5 e4       	ldi	r30, 0x45	; 69
 1a4:	f0 e0       	ldi	r31, 0x00	; 0
 1a6:	80 81       	ld	r24, Z
 1a8:	83 60       	ori	r24, 0x03	; 3
 1aa:	8c 93       	st	X, r24
    TIMERMASK |= (1 << TOIE);
 1ac:	ae e6       	ldi	r26, 0x6E	; 110
 1ae:	b0 e0       	ldi	r27, 0x00	; 0
 1b0:	ee e6       	ldi	r30, 0x6E	; 110
 1b2:	f0 e0       	ldi	r31, 0x00	; 0
 1b4:	80 81       	ld	r24, Z
 1b6:	81 60       	ori	r24, 0x01	; 1
 1b8:	8c 93       	st	X, r24

    PEIZODDR |= (1 << PEIZOPIN);
 1ba:	a4 e2       	ldi	r26, 0x24	; 36
 1bc:	b0 e0       	ldi	r27, 0x00	; 0
 1be:	e4 e2       	ldi	r30, 0x24	; 36
 1c0:	f0 e0       	ldi	r31, 0x00	; 0
 1c2:	80 81       	ld	r24, Z
 1c4:	81 60       	ori	r24, 0x01	; 1
 1c6:	8c 93       	st	X, r24
    PEIZOPORT &= ~(1 << PEIZOPIN);
 1c8:	a5 e2       	ldi	r26, 0x25	; 37
 1ca:	b0 e0       	ldi	r27, 0x00	; 0
 1cc:	e5 e2       	ldi	r30, 0x25	; 37
 1ce:	f0 e0       	ldi	r31, 0x00	; 0
 1d0:	80 81       	ld	r24, Z
 1d2:	8e 7f       	andi	r24, 0xFE	; 254
 1d4:	8c 93       	st	X, r24
    DDRB |= (1 << PB1);
 1d6:	a4 e2       	ldi	r26, 0x24	; 36
 1d8:	b0 e0       	ldi	r27, 0x00	; 0
 1da:	e4 e2       	ldi	r30, 0x24	; 36
 1dc:	f0 e0       	ldi	r31, 0x00	; 0
 1de:	80 81       	ld	r24, Z
 1e0:	82 60       	ori	r24, 0x02	; 2
 1e2:	8c 93       	st	X, r24
    sei();
 1e4:	78 94       	sei
}
 1e6:	cf 91       	pop	r28
 1e8:	df 91       	pop	r29
 1ea:	08 95       	ret

000001ec <playtune>:

void playtune(int tune[], int tunelenght)
{
 1ec:	df 93       	push	r29
 1ee:	cf 93       	push	r28
 1f0:	00 d0       	rcall	.+0      	; 0x1f2 <playtune+0x6>
 1f2:	00 d0       	rcall	.+0      	; 0x1f4 <playtune+0x8>
 1f4:	cd b7       	in	r28, 0x3d	; 61
 1f6:	de b7       	in	r29, 0x3e	; 62
 1f8:	9c 83       	std	Y+4, r25	; 0x04
 1fa:	8b 83       	std	Y+3, r24	; 0x03
 1fc:	7e 83       	std	Y+6, r23	; 0x06
 1fe:	6d 83       	std	Y+5, r22	; 0x05

    if(buzy == 0){
 200:	80 91 16 02 	lds	r24, 0x0216
 204:	90 91 17 02 	lds	r25, 0x0217
 208:	00 97       	sbiw	r24, 0x00	; 0
 20a:	09 f0       	breq	.+2      	; 0x20e <playtune+0x22>
 20c:	3f c0       	rjmp	.+126    	; 0x28c <playtune+0xa0>

        int i = 0;
 20e:	1a 82       	std	Y+2, r1	; 0x02
 210:	19 82       	std	Y+1, r1	; 0x01
        for(i = 0; i < tunelenght; i++){
 212:	1a 82       	std	Y+2, r1	; 0x02
 214:	19 82       	std	Y+1, r1	; 0x01
 216:	1b c0       	rjmp	.+54     	; 0x24e <playtune+0x62>

            tuneplaying[i] = tune[i];
 218:	49 81       	ldd	r20, Y+1	; 0x01
 21a:	5a 81       	ldd	r21, Y+2	; 0x02
 21c:	89 81       	ldd	r24, Y+1	; 0x01
 21e:	9a 81       	ldd	r25, Y+2	; 0x02
 220:	9c 01       	movw	r18, r24
 222:	22 0f       	add	r18, r18
 224:	33 1f       	adc	r19, r19
 226:	8b 81       	ldd	r24, Y+3	; 0x03
 228:	9c 81       	ldd	r25, Y+4	; 0x04
 22a:	fc 01       	movw	r30, r24
 22c:	e2 0f       	add	r30, r18
 22e:	f3 1f       	adc	r31, r19
 230:	20 81       	ld	r18, Z
 232:	31 81       	ldd	r19, Z+1	; 0x01
 234:	ca 01       	movw	r24, r20
 236:	88 0f       	add	r24, r24
 238:	99 1f       	adc	r25, r25
 23a:	fc 01       	movw	r30, r24
 23c:	e8 5e       	subi	r30, 0xE8	; 232
 23e:	fd 4f       	sbci	r31, 0xFD	; 253
 240:	31 83       	std	Z+1, r19	; 0x01
 242:	20 83       	st	Z, r18
{

    if(buzy == 0){

        int i = 0;
        for(i = 0; i < tunelenght; i++){
 244:	89 81       	ldd	r24, Y+1	; 0x01
 246:	9a 81       	ldd	r25, Y+2	; 0x02
 248:	01 96       	adiw	r24, 0x01	; 1
 24a:	9a 83       	std	Y+2, r25	; 0x02
 24c:	89 83       	std	Y+1, r24	; 0x01
 24e:	29 81       	ldd	r18, Y+1	; 0x01
 250:	3a 81       	ldd	r19, Y+2	; 0x02
 252:	8d 81       	ldd	r24, Y+5	; 0x05
 254:	9e 81       	ldd	r25, Y+6	; 0x06
 256:	28 17       	cp	r18, r24
 258:	39 07       	cpc	r19, r25
 25a:	f4 f2       	brlt	.-68     	; 0x218 <playtune+0x2c>

            tuneplaying[i] = tune[i];
        }

        totaltunelength = tunelenght;
 25c:	8d 81       	ldd	r24, Y+5	; 0x05
 25e:	9e 81       	ldd	r25, Y+6	; 0x06
 260:	90 93 09 02 	sts	0x0209, r25
 264:	80 93 08 02 	sts	0x0208, r24
        attunelength = 0;
 268:	10 92 0b 02 	sts	0x020B, r1
 26c:	10 92 0a 02 	sts	0x020A, r1
        counterA = 0;
 270:	10 92 13 02 	sts	0x0213, r1
 274:	10 92 12 02 	sts	0x0212, r1
        counterB = 0;
 278:	10 92 15 02 	sts	0x0215, r1
 27c:	10 92 14 02 	sts	0x0214, r1
        buzy = 1;
 280:	81 e0       	ldi	r24, 0x01	; 1
 282:	90 e0       	ldi	r25, 0x00	; 0
 284:	90 93 17 02 	sts	0x0217, r25
 288:	80 93 16 02 	sts	0x0216, r24
    }
}
 28c:	26 96       	adiw	r28, 0x06	; 6
 28e:	0f b6       	in	r0, 0x3f	; 63
 290:	f8 94       	cli
 292:	de bf       	out	0x3e, r29	; 62
 294:	0f be       	out	0x3f, r0	; 63
 296:	cd bf       	out	0x3d, r28	; 61
 298:	cf 91       	pop	r28
 29a:	df 91       	pop	r29
 29c:	08 95       	ret

0000029e <__vector_23>:

ISR(TIMEROVF){
 29e:	1f 92       	push	r1
 2a0:	0f 92       	push	r0
 2a2:	0f b6       	in	r0, 0x3f	; 63
 2a4:	0f 92       	push	r0
 2a6:	00 90 5b 00 	lds	r0, 0x005B
 2aa:	0f 92       	push	r0
 2ac:	11 24       	eor	r1, r1
 2ae:	2f 93       	push	r18
 2b0:	3f 93       	push	r19
 2b2:	8f 93       	push	r24
 2b4:	9f 93       	push	r25
 2b6:	af 93       	push	r26
 2b8:	bf 93       	push	r27
 2ba:	ef 93       	push	r30
 2bc:	ff 93       	push	r31
 2be:	df 93       	push	r29
 2c0:	cf 93       	push	r28
 2c2:	cd b7       	in	r28, 0x3d	; 61
 2c4:	de b7       	in	r29, 0x3e	; 62

    if(buzy == 1){
 2c6:	80 91 16 02 	lds	r24, 0x0216
 2ca:	90 91 17 02 	lds	r25, 0x0217
 2ce:	81 30       	cpi	r24, 0x01	; 1
 2d0:	91 05       	cpc	r25, r1
 2d2:	09 f0       	breq	.+2      	; 0x2d6 <__vector_23+0x38>
 2d4:	7b c0       	rjmp	.+246    	; 0x3cc <__vector_23+0x12e>
        if(976 <= counterA)
 2d6:	80 91 12 02 	lds	r24, 0x0212
 2da:	90 91 13 02 	lds	r25, 0x0213
 2de:	23 e0       	ldi	r18, 0x03	; 3
 2e0:	80 3d       	cpi	r24, 0xD0	; 208
 2e2:	92 07       	cpc	r25, r18
 2e4:	c0 f1       	brcs	.+112    	; 0x356 <__vector_23+0xb8>
        {
            PORTB ^= (1 << PB1);
 2e6:	a5 e2       	ldi	r26, 0x25	; 37
 2e8:	b0 e0       	ldi	r27, 0x00	; 0
 2ea:	e5 e2       	ldi	r30, 0x25	; 37
 2ec:	f0 e0       	ldi	r31, 0x00	; 0
 2ee:	90 81       	ld	r25, Z
 2f0:	82 e0       	ldi	r24, 0x02	; 2
 2f2:	89 27       	eor	r24, r25
 2f4:	8c 93       	st	X, r24
            if(attunelength < totaltunelength)
 2f6:	20 91 0a 02 	lds	r18, 0x020A
 2fa:	30 91 0b 02 	lds	r19, 0x020B
 2fe:	80 91 08 02 	lds	r24, 0x0208
 302:	90 91 09 02 	lds	r25, 0x0209
 306:	28 17       	cp	r18, r24
 308:	39 07       	cpc	r19, r25
 30a:	0c f5       	brge	.+66     	; 0x34e <__vector_23+0xb0>
            {
                Tune = tuneplaying[attunelength];
 30c:	80 91 0a 02 	lds	r24, 0x020A
 310:	90 91 0b 02 	lds	r25, 0x020B
 314:	88 0f       	add	r24, r24
 316:	99 1f       	adc	r25, r25
 318:	fc 01       	movw	r30, r24
 31a:	e8 5e       	subi	r30, 0xE8	; 232
 31c:	fd 4f       	sbci	r31, 0xFD	; 253
 31e:	80 81       	ld	r24, Z
 320:	91 81       	ldd	r25, Z+1	; 0x01
 322:	90 93 0d 02 	sts	0x020D, r25
 326:	80 93 0c 02 	sts	0x020C, r24
                attunelength ++;
 32a:	80 91 0a 02 	lds	r24, 0x020A
 32e:	90 91 0b 02 	lds	r25, 0x020B
 332:	01 96       	adiw	r24, 0x01	; 1
 334:	90 93 0b 02 	sts	0x020B, r25
 338:	80 93 0a 02 	sts	0x020A, r24
                a = 0;
 33c:	10 92 11 02 	sts	0x0211, r1
 340:	10 92 10 02 	sts	0x0210, r1
                counterA = 0;
 344:	10 92 13 02 	sts	0x0213, r1
 348:	10 92 12 02 	sts	0x0212, r1
 34c:	04 c0       	rjmp	.+8      	; 0x356 <__vector_23+0xb8>
            }
            else
            {
                buzy = 0;
 34e:	10 92 17 02 	sts	0x0217, r1
 352:	10 92 16 02 	sts	0x0216, r1
            }
        }

        if(Tune <= counterB)
 356:	80 91 0c 02 	lds	r24, 0x020C
 35a:	90 91 0d 02 	lds	r25, 0x020D
 35e:	9c 01       	movw	r18, r24
 360:	80 91 14 02 	lds	r24, 0x0214
 364:	90 91 15 02 	lds	r25, 0x0215
 368:	82 17       	cp	r24, r18
 36a:	93 07       	cpc	r25, r19
 36c:	e0 f0       	brcs	.+56     	; 0x3a6 <__vector_23+0x108>
        {
            if(a < 2){
 36e:	80 91 10 02 	lds	r24, 0x0210
 372:	90 91 11 02 	lds	r25, 0x0211
 376:	82 30       	cpi	r24, 0x02	; 2
 378:	91 05       	cpc	r25, r1
 37a:	ac f4       	brge	.+42     	; 0x3a6 <__vector_23+0x108>
                PEIZOPORT ^=(1<<PEIZOPIN);
 37c:	a5 e2       	ldi	r26, 0x25	; 37
 37e:	b0 e0       	ldi	r27, 0x00	; 0
 380:	e5 e2       	ldi	r30, 0x25	; 37
 382:	f0 e0       	ldi	r31, 0x00	; 0
 384:	90 81       	ld	r25, Z
 386:	81 e0       	ldi	r24, 0x01	; 1
 388:	89 27       	eor	r24, r25
 38a:	8c 93       	st	X, r24
                counterB = 0;
 38c:	10 92 15 02 	sts	0x0215, r1
 390:	10 92 14 02 	sts	0x0214, r1
                a++;
 394:	80 91 10 02 	lds	r24, 0x0210
 398:	90 91 11 02 	lds	r25, 0x0211
 39c:	01 96       	adiw	r24, 0x01	; 1
 39e:	90 93 11 02 	sts	0x0211, r25
 3a2:	80 93 10 02 	sts	0x0210, r24
            }
        }
        counterA ++;
 3a6:	80 91 12 02 	lds	r24, 0x0212
 3aa:	90 91 13 02 	lds	r25, 0x0213
 3ae:	01 96       	adiw	r24, 0x01	; 1
 3b0:	90 93 13 02 	sts	0x0213, r25
 3b4:	80 93 12 02 	sts	0x0212, r24
        counterB ++;
 3b8:	80 91 14 02 	lds	r24, 0x0214
 3bc:	90 91 15 02 	lds	r25, 0x0215
 3c0:	01 96       	adiw	r24, 0x01	; 1
 3c2:	90 93 15 02 	sts	0x0215, r25
 3c6:	80 93 14 02 	sts	0x0214, r24
 3ca:	07 c0       	rjmp	.+14     	; 0x3da <__vector_23+0x13c>
    }
    else
    {
        PEIZOPORT &= ~(1 << PEIZOPIN);
 3cc:	a5 e2       	ldi	r26, 0x25	; 37
 3ce:	b0 e0       	ldi	r27, 0x00	; 0
 3d0:	e5 e2       	ldi	r30, 0x25	; 37
 3d2:	f0 e0       	ldi	r31, 0x00	; 0
 3d4:	80 81       	ld	r24, Z
 3d6:	8e 7f       	andi	r24, 0xFE	; 254
 3d8:	8c 93       	st	X, r24
    }



}
 3da:	cf 91       	pop	r28
 3dc:	df 91       	pop	r29
 3de:	ff 91       	pop	r31
 3e0:	ef 91       	pop	r30
 3e2:	bf 91       	pop	r27
 3e4:	af 91       	pop	r26
 3e6:	9f 91       	pop	r25
 3e8:	8f 91       	pop	r24
 3ea:	3f 91       	pop	r19
 3ec:	2f 91       	pop	r18
 3ee:	0f 90       	pop	r0
 3f0:	00 92 5b 00 	sts	0x005B, r0
 3f4:	0f 90       	pop	r0
 3f6:	0f be       	out	0x3f, r0	; 63
 3f8:	0f 90       	pop	r0
 3fa:	1f 90       	pop	r1
 3fc:	18 95       	reti

000003fe <_exit>:
 3fe:	f8 94       	cli

00000400 <__stop_program>:
 400:	ff cf       	rjmp	.-2      	; 0x400 <__stop_program>
